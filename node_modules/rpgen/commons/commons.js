
"use strict"





const commons = {
	async:  { },
	string: { }
}




commons.async.repeat = (times, fn, callback, acc) => {

	if (times === 0) {
		return callback(acc ? acc : [ ])
	}

	fn((err, data) => {

		if (err) {
			throw err
		}

		commons.async.repeat(times - 1, fn, callback, (acc ? acc : [ ]).concat(data))

	})

}





commons.string.getCharset = chars => {

	const unique = [ ]

	for (let ith = 0; ith < chars.length; ++ith) {

		var char = chars.charAt(ith)

		if (unique.indexOf(char) === -1) {
			unique.push(char)
		}

	}

	return unique

}





module.exports = commons
